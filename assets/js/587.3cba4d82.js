(window.webpackJsonp=window.webpackJsonp||[]).push([[587],{1259:function(v,_,t){"use strict";t.r(_);var e=t(92),d=Object(e.a)({},(function(){var v=this.$createElement;this._self._c;return this._m(0)}),[function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("div",[t("h2",[v._v("API")]),v._v(" "),t("h3",[v._v("Tree props")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("参数")]),v._v(" "),t("th",[v._v("说明")]),v._v(" "),t("th",[v._v("类型")]),v._v(" "),t("th",[v._v("默认值")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("treeData")]),v._v(" "),t("td",[v._v("节点的配置描述，具体项见下表, 1.1.4 之前的版本使用"),t("code",{pre:!0},[v._v("treeNodes")])]),v._v(" "),t("td",[v._v("array")]),v._v(" "),t("td",[v._v("--")])]),v._v(" "),t("tr",[t("td",[v._v("replaceFields")]),v._v(" "),t("td",[v._v("替换treeNode中 title,key,children字段为treeData中对应的字段")]),v._v(" "),t("td",[v._v("object")]),v._v(" "),t("td",[v._v("{children:'children', title:'title', key:'key' }")])]),v._v(" "),t("tr",[t("td",[v._v("autoExpandParent")]),v._v(" "),t("td",[v._v("是否自动展开父节点")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("true")])]),v._v(" "),t("tr",[t("td",[v._v("checkable")]),v._v(" "),t("td",[v._v("节点前添加 Checkbox 复选框")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("false")])]),v._v(" "),t("tr",[t("td",[v._v("checkedKeys(v-model)")]),v._v(" "),t("td",[v._v("（受控）选中复选框的树节点（注意：父子节点有关联，如果传入父节点 key，则子节点自动选中；相应当子节点 key 都传入，父节点也自动选中。当设置"),t("code",{pre:!0},[v._v("checkable")]),v._v("和"),t("code",{pre:!0},[v._v("checkStrictly")]),v._v("，它是一个有"),t("code",{pre:!0},[v._v("checked")]),v._v("和"),t("code",{pre:!0},[v._v("halfChecked")]),v._v("属性的对象，并且父子节点的选中与否不再关联")]),v._v(" "),t("td",[v._v("string[] | number[] | {checked: string[] | number[], halfChecked: string[] | number[]}")]),v._v(" "),t("td",[v._v("[]")])]),v._v(" "),t("tr",[t("td",[v._v("checkStrictly")]),v._v(" "),t("td",[v._v("checkable 状态下节点选择完全受控（父子节点选中状态不再关联）")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("false")])]),v._v(" "),t("tr",[t("td",[v._v("defaultCheckedKeys")]),v._v(" "),t("td",[v._v("默认选中复选框的树节点")]),v._v(" "),t("td",[v._v("string[] | number[]")]),v._v(" "),t("td",[v._v("[]")])]),v._v(" "),t("tr",[t("td",[v._v("defaultExpandAll")]),v._v(" "),t("td",[v._v("默认展开所有树节点")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("false")])]),v._v(" "),t("tr",[t("td",[v._v("defaultExpandedKeys")]),v._v(" "),t("td",[v._v("默认展开指定的树节点")]),v._v(" "),t("td",[v._v("string[] | number[]")]),v._v(" "),t("td",[v._v("[]")])]),v._v(" "),t("tr",[t("td",[v._v("defaultExpandParent")]),v._v(" "),t("td",[v._v("默认展开父节点")]),v._v(" "),t("td",[v._v("bool")]),v._v(" "),t("td",[v._v("true")])]),v._v(" "),t("tr",[t("td",[v._v("defaultSelectedKeys")]),v._v(" "),t("td",[v._v("默认选中的树节点")]),v._v(" "),t("td",[v._v("string[] | number[]")]),v._v(" "),t("td",[v._v("[]")])]),v._v(" "),t("tr",[t("td",[v._v("disabled")]),v._v(" "),t("td",[v._v("将树禁用")]),v._v(" "),t("td",[v._v("bool")]),v._v(" "),t("td",[v._v("false")])]),v._v(" "),t("tr",[t("td",[v._v("draggable")]),v._v(" "),t("td",[v._v("设置节点可拖拽")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("false")])]),v._v(" "),t("tr",[t("td",[v._v("expandedKeys(.sync)")]),v._v(" "),t("td",[v._v("（受控）展开指定的树节点")]),v._v(" "),t("td",[v._v("string[] | number[]")]),v._v(" "),t("td",[v._v("[]")])]),v._v(" "),t("tr",[t("td",[v._v("filterTreeNode")]),v._v(" "),t("td",[v._v("按需筛选树节点（高亮），返回 true")]),v._v(" "),t("td",[v._v("function(node)")]),v._v(" "),t("td",[v._v("-")])]),v._v(" "),t("tr",[t("td",[v._v("loadData")]),v._v(" "),t("td",[v._v("异步加载数据")]),v._v(" "),t("td",[v._v("function(node)")]),v._v(" "),t("td",[v._v("-")])]),v._v(" "),t("tr",[t("td",[v._v("loadedKeys")]),v._v(" "),t("td",[v._v("（受控）已经加载的节点，需要配合 "),t("code",{pre:!0},[v._v("loadData")]),v._v(" 使用")]),v._v(" "),t("td",[v._v("string[] | number[]")]),v._v(" "),t("td",[v._v("[]")])]),v._v(" "),t("tr",[t("td",[v._v("multiple")]),v._v(" "),t("td",[v._v("支持点选多个节点（节点本身）")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("false")])]),v._v(" "),t("tr",[t("td",[v._v("selectedKeys(.sync)")]),v._v(" "),t("td",[v._v("（受控）设置选中的树节点")]),v._v(" "),t("td",[v._v("string[] | number[]")]),v._v(" "),t("td",[v._v("-")])]),v._v(" "),t("tr",[t("td",[v._v("showIcon")]),v._v(" "),t("td",[v._v("是否展示 TreeNode title 前的图标，没有默认样式，如设置为 true，需要自行定义图标相关样式")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("false")])]),v._v(" "),t("tr",[t("td",[v._v("switcherIcon")]),v._v(" "),t("td",[v._v("自定义树节点的展开/折叠图标")]),v._v(" "),t("td",[v._v("slot")]),v._v(" "),t("td",[v._v("-")])]),v._v(" "),t("tr",[t("td",[v._v("showLine")]),v._v(" "),t("td",[v._v("是否展示连接线")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("false")])])])]),v._v(" "),t("h3",[v._v("事件")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("事件名称")]),v._v(" "),t("th",[v._v("说明")]),v._v(" "),t("th",[v._v("回调参数")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("check")]),v._v(" "),t("td",[v._v("点击复选框触发")]),v._v(" "),t("td",[v._v("function(checkedKeys, e:{checked: bool, checkedNodes, node, event})")])]),v._v(" "),t("tr",[t("td",[v._v("dragend")]),v._v(" "),t("td",[v._v("dragend 触发时调用")]),v._v(" "),t("td",[v._v("function({event, node})")])]),v._v(" "),t("tr",[t("td",[v._v("dragenter")]),v._v(" "),t("td",[v._v("dragenter 触发时调用")]),v._v(" "),t("td",[v._v("function({event, node, expandedKeys})")])]),v._v(" "),t("tr",[t("td",[v._v("dragleave")]),v._v(" "),t("td",[v._v("dragleave 触发时调用")]),v._v(" "),t("td",[v._v("function({event, node})")])]),v._v(" "),t("tr",[t("td",[v._v("dragover")]),v._v(" "),t("td",[v._v("dragover 触发时调用")]),v._v(" "),t("td",[v._v("function({event, node})")])]),v._v(" "),t("tr",[t("td",[v._v("dragstart")]),v._v(" "),t("td",[v._v("开始拖拽时调用")]),v._v(" "),t("td",[v._v("function({event, node})")])]),v._v(" "),t("tr",[t("td",[v._v("drop")]),v._v(" "),t("td",[v._v("drop 触发时调用")]),v._v(" "),t("td",[v._v("function({event, node, dragNode, dragNodesKeys})")])]),v._v(" "),t("tr",[t("td",[v._v("expand")]),v._v(" "),t("td",[v._v("展开/收起节点时触发")]),v._v(" "),t("td",[v._v("function(expandedKeys, {expanded: bool, node})")])]),v._v(" "),t("tr",[t("td",[v._v("load")]),v._v(" "),t("td",[v._v("节点加载完毕时触发")]),v._v(" "),t("td",[v._v("function(loadedKeys, {event, node})")])]),v._v(" "),t("tr",[t("td",[v._v("rightClick")]),v._v(" "),t("td",[v._v("响应右键点击")]),v._v(" "),t("td",[v._v("function({event, node})")])]),v._v(" "),t("tr",[t("td",[v._v("select")]),v._v(" "),t("td",[v._v("点击树节点触发")]),v._v(" "),t("td",[v._v("function(selectedKeys, e:{selected: bool, selectedNodes, node, event})")])])])]),v._v(" "),t("h3",[v._v("TreeNode props")]),v._v(" "),t("p",[v._v("结点描述数据对象，是 treeNodes 中的一项，TreeNode 使用相同的 API。")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("参数")]),v._v(" "),t("th",[v._v("说明")]),v._v(" "),t("th",[v._v("类型")]),v._v(" "),t("th",[v._v("默认值")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("class")]),v._v(" "),t("td",[v._v("节点的 class")]),v._v(" "),t("td",[v._v("string")]),v._v(" "),t("td",[v._v("-")])]),v._v(" "),t("tr",[t("td",[v._v("style")]),v._v(" "),t("td",[v._v("节点的 style")]),v._v(" "),t("td",[v._v("string|object")]),v._v(" "),t("td",[v._v("-")])]),v._v(" "),t("tr",[t("td",[v._v("disableCheckbox")]),v._v(" "),t("td",[v._v("禁掉 checkbox")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("false")])]),v._v(" "),t("tr",[t("td",[v._v("disabled")]),v._v(" "),t("td",[v._v("禁掉响应")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("false")])]),v._v(" "),t("tr",[t("td",[v._v("icon")]),v._v(" "),t("td",[v._v("自定义图标。可接收组件，props 为当前节点 props")]),v._v(" "),t("td",[v._v("slot|slot-scope")]),v._v(" "),t("td",[v._v("-")])]),v._v(" "),t("tr",[t("td",[v._v("isLeaf")]),v._v(" "),t("td",[v._v("设置为叶子节点(设置了"),t("code",{pre:!0},[v._v("loadData")]),v._v("时有效)")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("false")])]),v._v(" "),t("tr",[t("td",[v._v("key")]),v._v(" "),t("td",[v._v("被树的 (default)ExpandedKeys / (default)CheckedKeys / (default)SelectedKeys 属性所用。注意：整个树范围内的所有节点的 key 值不能重复！")]),v._v(" "),t("td",[v._v("string | number")]),v._v(" "),t("td",[v._v("内部计算出的节点位置")])]),v._v(" "),t("tr",[t("td",[v._v("selectable")]),v._v(" "),t("td",[v._v("设置节点是否可被选中")]),v._v(" "),t("td",[v._v("boolean")]),v._v(" "),t("td",[v._v("true")])]),v._v(" "),t("tr",[t("td",[v._v("title")]),v._v(" "),t("td",[v._v("标题")]),v._v(" "),t("td",[v._v("string|slot|slot-scope")]),v._v(" "),t("td",[v._v("'---'")])]),v._v(" "),t("tr",[t("td",[v._v("slots")]),v._v(" "),t("td",[v._v("使用 treeNodes 时，可以通过该属性配置支持 slot 的属性，如 "),t("code",{pre:!0},[v._v("slots: { title: 'XXX'}")])]),v._v(" "),t("td",[v._v("object")]),v._v(" "),t("td",[v._v("-")])]),v._v(" "),t("tr",[t("td",[v._v("scopedSlots")]),v._v(" "),t("td",[v._v("使用 columns 时，可以通过该属性配置支持 slot-scope 的属性，如 "),t("code",{pre:!0},[v._v("scopedSlots: { title: 'XXX'}")])]),v._v(" "),t("td",[v._v("object")]),v._v(" "),t("td",[v._v("-")])]),v._v(" "),t("tr",[t("td",[v._v("on")]),v._v(" "),t("td",[v._v("事件对象，仅在 treeNodes 使用方式中生效，如"),t("code",{pre:!0},[v._v("{click: () => {}}")])]),v._v(" "),t("td",[v._v("object")]),v._v(" "),t("td",[v._v("'---'")])])])]),v._v(" "),t("h3",[v._v("DirectoryTree props")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("参数")]),v._v(" "),t("th",[v._v("说明")]),v._v(" "),t("th",[v._v("类型")]),v._v(" "),t("th",[v._v("默认值")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("expandAction")]),v._v(" "),t("td",[v._v("目录展开逻辑，可选 "),t("code",{pre:!0},[v._v("false")]),v._v(" "),t("code",{pre:!0},[v._v("'click'")]),v._v(" "),t("code",{pre:!0},[v._v("'dblclick'")])]),v._v(" "),t("td",[v._v("string")]),v._v(" "),t("td",[v._v("click")])])])]),v._v(" "),t("h2",[v._v("FAQ")]),v._v(" "),t("h3",[v._v("在 showLine 时，如何隐藏子节点图标？")]),v._v(" "),t("p",[v._v("文件图标通过 switcherIcon 来实现，如果不需要你可以覆盖对应的样式")])])}],!1,null,null,null);_.default=d.exports}}]);