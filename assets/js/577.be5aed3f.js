(window.webpackJsonp=window.webpackJsonp||[]).push([[577],{1258:function(e,t,v){"use strict";v.r(t);var _=v(92),d=Object(_.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("div",[v("h2",[e._v("API")]),e._v(" "),v("h3",[e._v("Tree props")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("Property")]),e._v(" "),v("th",[e._v("Description")]),e._v(" "),v("th",[e._v("Type")]),e._v(" "),v("th",[e._v("Default")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("allowClear")]),e._v(" "),v("td",[e._v("Whether allow clear")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("defaultValue")]),e._v(" "),v("td",[e._v("To set the initial selected treeNode(s).")]),e._v(" "),v("td",[e._v("string|string[]")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("disabled")]),e._v(" "),v("td",[e._v("Disabled or not")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("dropdownClassName")]),e._v(" "),v("td",[e._v("className of dropdown menu")]),e._v(" "),v("td",[e._v("string")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("dropdownMatchSelectWidth")]),e._v(" "),v("td",[e._v("Determine whether the dropdown menu and the select input are the same width")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("true")])]),e._v(" "),v("tr",[v("td",[e._v("dropdownStyle")]),e._v(" "),v("td",[e._v("To set the style of the dropdown menu")]),e._v(" "),v("td",[e._v("object")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("filterTreeNode")]),e._v(" "),v("td",[e._v("Whether to filter treeNodes by input value. The value of "),v("code",{pre:!0},[e._v("treeNodeFilterProp")]),e._v(" is used for filtering by default.")]),e._v(" "),v("td",[e._v("boolean|Function(inputValue: string, treeNode: TreeNode) (should return boolean)")]),e._v(" "),v("td",[e._v("Function")])]),e._v(" "),v("tr",[v("td",[e._v("getPopupContainer")]),e._v(" "),v("td",[e._v("To set the container of the dropdown menu. The default is to create a "),v("code",{pre:!0},[e._v("div")]),e._v(" element in "),v("code",{pre:!0},[e._v("body")]),e._v(", you can reset it to the scrolling area and make a relative reposition.")]),e._v(" "),v("td",[e._v("Function(triggerNode)")]),e._v(" "),v("td",[e._v("() => document.body")])]),e._v(" "),v("tr",[v("td",[e._v("labelInValue")]),e._v(" "),v("td",[e._v("whether to embed label in value, turn the format of value from "),v("code",{pre:!0},[e._v("string")]),e._v(" to "),v("code",{pre:!0},[e._v("{value: string, label: VNode, halfChecked: string[]}")])]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("loadData")]),e._v(" "),v("td",[e._v("Load data asynchronously.")]),e._v(" "),v("td",[e._v("function(node)")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("maxTagCount")]),e._v(" "),v("td",[e._v("Max tag count to show")]),e._v(" "),v("td",[e._v("number")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("maxTagPlaceholder")]),e._v(" "),v("td",[e._v("Placeholder for not showing tags")]),e._v(" "),v("td",[e._v("slot/function(omittedValues)")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("multiple")]),e._v(" "),v("td",[e._v("Support multiple or not, will be "),v("code",{pre:!0},[e._v("true")]),e._v(" when enable "),v("code",{pre:!0},[e._v("treeCheckable")]),e._v(".")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("placeholder")]),e._v(" "),v("td",[e._v("Placeholder of the select input")]),e._v(" "),v("td",[e._v("string|slot")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("searchPlaceholder")]),e._v(" "),v("td",[e._v("Placeholder of the search input")]),e._v(" "),v("td",[e._v("string|slot")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("searchValue(.sync)")]),e._v(" "),v("td",[e._v("work with "),v("code",{pre:!0},[e._v("search")]),e._v(" event to make search value controlled.")]),e._v(" "),v("td",[e._v("string")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("treeIcon")]),e._v(" "),v("td",[e._v("Shows the icon before a TreeNode's title. There is no default style; you must set a custom style for it if set to "),v("code",{pre:!0},[e._v("true")])]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("showCheckedStrategy")]),e._v(" "),v("td",[e._v("The way show selected item in box. "),v("strong",[e._v("Default:")]),e._v(" just show child nodes. "),v("strong",[v("code",{pre:!0},[e._v("TreeSelect.SHOW_ALL")]),e._v(":")]),e._v(" show all checked treeNodes (include parent treeNode). "),v("strong",[v("code",{pre:!0},[e._v("TreeSelect.SHOW_PARENT")]),e._v(":")]),e._v(" show checked treeNodes (just show parent treeNode).")]),e._v(" "),v("td",[e._v("enum { TreeSelect.SHOW_ALL, TreeSelect.SHOW_PARENT, TreeSelect.SHOW_CHILD }")]),e._v(" "),v("td",[e._v("TreeSelect.SHOW_CHILD")])]),e._v(" "),v("tr",[v("td",[e._v("showSearch")]),e._v(" "),v("td",[e._v("Whether to display a search input in the dropdown menu(valid only in the single mode)")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("size")]),e._v(" "),v("td",[e._v("To set the size of the select input, options: "),v("code",{pre:!0},[e._v("large")]),e._v(" "),v("code",{pre:!0},[e._v("small")])]),e._v(" "),v("td",[e._v("string")]),e._v(" "),v("td",[e._v("'default'")])]),e._v(" "),v("tr",[v("td",[e._v("suffixIcon")]),e._v(" "),v("td",[e._v("The custom suffix icon")]),e._v(" "),v("td",[e._v("VNode | slot")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("treeCheckable")]),e._v(" "),v("td",[e._v("Whether to show checkbox on the treeNodes")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("treeCheckStrictly")]),e._v(" "),v("td",[e._v("Whether to check nodes precisely (in the "),v("code",{pre:!0},[e._v("checkable")]),e._v(" mode), means parent and child nodes are not associated, and it will make "),v("code",{pre:!0},[e._v("labelInValue")]),e._v(" be true")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("treeData")]),e._v(" "),v("td",[e._v("Data of the treeNodes, manual construction work is no longer needed if this property has been set(ensure the Uniqueness of each value)")]),e._v(" "),v("td",[e._v("array<{ value, title, children, [disabled, disableCheckbox, selectable] }>")]),e._v(" "),v("td",[e._v("[]")])]),e._v(" "),v("tr",[v("td",[e._v("treeDataSimpleMode")]),e._v(" "),v("td",[e._v("Enable simple mode of treeData. Changes the "),v("code",{pre:!0},[e._v("treeData")]),e._v(" schema to: [{id:1, pId:0, value:'1', title:\"test1\",...},...] where pId is parent node's id). It is possible to replace the default "),v("code",{pre:!0},[e._v("id")]),e._v(" and "),v("code",{pre:!0},[e._v("pId")]),e._v(" keys by providing object to "),v("code",{pre:!0},[e._v("treeDataSimpleMode")])]),e._v(" "),v("td",[e._v("false|object<{ id: string, pId: string, rootPId: null }>")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("treeDefaultExpandAll")]),e._v(" "),v("td",[e._v("Whether to expand all treeNodes by default")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("treeDefaultExpandedKeys")]),e._v(" "),v("td",[e._v("Default expanded treeNodes")]),e._v(" "),v("td",[e._v("string[] | number[]")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("treeExpandedKeys(.sync)")]),e._v(" "),v("td",[e._v("Set expanded keys")]),e._v(" "),v("td",[e._v("string[] | number[]")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("treeNodeFilterProp")]),e._v(" "),v("td",[e._v("Will be used for filtering if "),v("code",{pre:!0},[e._v("filterTreeNode")]),e._v(" returns true")]),e._v(" "),v("td",[e._v("string")]),e._v(" "),v("td",[e._v("'value'")])]),e._v(" "),v("tr",[v("td",[e._v("treeNodeLabelProp")]),e._v(" "),v("td",[e._v("Will render as content of select")]),e._v(" "),v("td",[e._v("string")]),e._v(" "),v("td",[e._v("'title'")])]),e._v(" "),v("tr",[v("td",[e._v("value(v-model)")]),e._v(" "),v("td",[e._v("To set the current selected treeNode(s).")]),e._v(" "),v("td",[e._v("string|string[]")]),e._v(" "),v("td",[e._v("-")])])])]),e._v(" "),v("h3",[e._v("Events")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("Events Name")]),e._v(" "),v("th",[e._v("Description")]),e._v(" "),v("th",[e._v("Arguments")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("change")]),e._v(" "),v("td",[e._v("A callback function, can be executed when selected treeNodes or input value change")]),e._v(" "),v("td",[e._v("function(value, label, extra)")])]),e._v(" "),v("tr",[v("td",[e._v("search")]),e._v(" "),v("td",[e._v("A callback function, can be executed when the search input changes.")]),e._v(" "),v("td",[e._v("function(value: string)")])]),e._v(" "),v("tr",[v("td",[e._v("select")]),e._v(" "),v("td",[e._v("A callback function, can be executed when you select a treeNode.")]),e._v(" "),v("td",[e._v("function(value, node, extra)")])]),e._v(" "),v("tr",[v("td",[e._v("treeExpand")]),e._v(" "),v("td",[e._v("A callback function, can be executed when treeNode expanded")]),e._v(" "),v("td",[e._v("function(expandedKeys)")])])])]),e._v(" "),v("h3",[e._v("Tree Methods")]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("Name")]),e._v(" "),v("th",[e._v("Description")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("blur()")]),e._v(" "),v("td",[e._v("remove focus")])]),e._v(" "),v("tr",[v("td",[e._v("focus()")]),e._v(" "),v("td",[e._v("get focus")])])])]),e._v(" "),v("h3",[e._v("TreeNode props")]),e._v(" "),v("blockquote",[v("p",[e._v("We recommend you to use "),v("code",{pre:!0},[e._v("treeData")]),e._v(" rather than "),v("code",{pre:!0},[e._v("TreeNode")]),e._v(", to avoid the trouble of manual construction.")])]),e._v(" "),v("table",[v("thead",[v("tr",[v("th",[e._v("Property")]),e._v(" "),v("th",[e._v("Description")]),e._v(" "),v("th",[e._v("Type")]),e._v(" "),v("th",[e._v("Default")])])]),e._v(" "),v("tbody",[v("tr",[v("td",[e._v("selectable")]),e._v(" "),v("td",[e._v("can be selected")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("true")])]),e._v(" "),v("tr",[v("td",[e._v("disableCheckbox")]),e._v(" "),v("td",[e._v("Disables the checkbox of the treeNode")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("disabled")]),e._v(" "),v("td",[e._v("Disabled or not")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("isLeaf")]),e._v(" "),v("td",[e._v("Leaf node or not")]),e._v(" "),v("td",[e._v("boolean")]),e._v(" "),v("td",[e._v("false")])]),e._v(" "),v("tr",[v("td",[e._v("key")]),e._v(" "),v("td",[e._v("Required property, should be unique in the tree")]),e._v(" "),v("td",[e._v("string | number")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("title")]),e._v(" "),v("td",[e._v("Content showed on the treeNodes")]),e._v(" "),v("td",[e._v("string|slot")]),e._v(" "),v("td",[e._v("'---'")])]),e._v(" "),v("tr",[v("td",[e._v("value")]),e._v(" "),v("td",[e._v("Will be treated as "),v("code",{pre:!0},[e._v("treeNodeFilterProp")]),e._v(" by default, should be unique in the tree")]),e._v(" "),v("td",[e._v("string")]),e._v(" "),v("td",[e._v("-")])]),e._v(" "),v("tr",[v("td",[e._v("scopedSlots")]),e._v(" "),v("td",[e._v("When using treeNodes, you can use this property to configure the properties that support the slot, such as "),v("code",{pre:!0},[e._v("scopedSlots: { title: 'XXX'}")])]),e._v(" "),v("td",[e._v("object")]),e._v(" "),v("td",[e._v("-")])])])])])}],!1,null,null,null);t.default=d.exports}}]);