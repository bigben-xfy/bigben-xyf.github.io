(window.webpackJsonp=window.webpackJsonp||[]).push([[413],{1157:function(t,e,v){"use strict";v.r(e);var o=v(92),_=Object(o.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("div",[v("h2",[t._v("API")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Property")]),t._v(" "),v("th",[t._v("Description")]),t._v(" "),v("th",[t._v("Type")]),t._v(" "),v("th",[t._v("Default")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("afterClose")]),t._v(" "),v("td",[t._v("Specify a function that will be called when modal is closed completely.")]),t._v(" "),v("td",[t._v("function")]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("bodyStyle")]),t._v(" "),v("td",[t._v("Body style for modal body element. Such as height, padding etc.")]),t._v(" "),v("td",[t._v("object")]),t._v(" "),v("td",[t._v("{}")])]),t._v(" "),v("tr",[v("td",[t._v("cancelText")]),t._v(" "),v("td",[t._v("Text of the Cancel button")]),t._v(" "),v("td",[t._v("string|slot")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("Cancel")])])]),t._v(" "),v("tr",[v("td",[t._v("centered")]),t._v(" "),v("td",[t._v("Centered Modal")]),t._v(" "),v("td",[t._v("Boolean")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("false")])])]),t._v(" "),v("tr",[v("td",[t._v("closable")]),t._v(" "),v("td",[t._v("Whether a close (x) button is visible on top right of the modal dialog or not")]),t._v(" "),v("td",[t._v("boolean")]),t._v(" "),v("td",[t._v("true")])]),t._v(" "),v("tr",[v("td",[t._v("confirmLoading")]),t._v(" "),v("td",[t._v("Whether to apply loading visual effect for OK button or not")]),t._v(" "),v("td",[t._v("boolean")]),t._v(" "),v("td",[t._v("false")])]),t._v(" "),v("tr",[v("td",[t._v("destroyOnClose")]),t._v(" "),v("td",[t._v("Whether to unmount child components on onClose")]),t._v(" "),v("td",[t._v("boolean")]),t._v(" "),v("td",[t._v("false")])]),t._v(" "),v("tr",[v("td",[t._v("footer")]),t._v(" "),v("td",[t._v("Footer content, set as "),v("code",{pre:!0},[t._v(':footer="null"')]),t._v(" when you don't need default buttons")]),t._v(" "),v("td",[t._v("string|slot")]),t._v(" "),v("td",[t._v("OK and Cancel buttons")])]),t._v(" "),v("tr",[v("td",[t._v("forceRender")]),t._v(" "),v("td",[t._v("Force render Modal")]),t._v(" "),v("td",[t._v("boolean")]),t._v(" "),v("td",[t._v("false")])]),t._v(" "),v("tr",[v("td",[t._v("getContainer")]),t._v(" "),v("td",[t._v("Return the mount node for Modal")]),t._v(" "),v("td",[t._v("(instance): HTMLElement")]),t._v(" "),v("td",[t._v("() => document.body")])]),t._v(" "),v("tr",[v("td",[t._v("mask")]),t._v(" "),v("td",[t._v("Whether show mask or not.")]),t._v(" "),v("td",[t._v("Boolean")]),t._v(" "),v("td",[t._v("true")])]),t._v(" "),v("tr",[v("td",[t._v("maskClosable")]),t._v(" "),v("td",[t._v("Whether to close the modal dialog when the mask (area outside the modal) is clicked")]),t._v(" "),v("td",[t._v("boolean")]),t._v(" "),v("td",[t._v("true")])]),t._v(" "),v("tr",[v("td",[t._v("maskStyle")]),t._v(" "),v("td",[t._v("Style for modal's mask element.")]),t._v(" "),v("td",[t._v("object")]),t._v(" "),v("td",[t._v("{}")])]),t._v(" "),v("tr",[v("td",[t._v("okText")]),t._v(" "),v("td",[t._v("Text of the OK button")]),t._v(" "),v("td",[t._v("string|slot")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("OK")])])]),t._v(" "),v("tr",[v("td",[t._v("okType")]),t._v(" "),v("td",[t._v("Button "),v("code",{pre:!0},[t._v("type")]),t._v(" of the OK button")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("primary")])])]),t._v(" "),v("tr",[v("td",[t._v("okButtonProps")]),t._v(" "),v("td",[t._v("The ok button props, follow jsx "),v("a",{attrs:{href:"https://github.com/vuejs/babel-plugin-transform-vue-jsx#difference-from-react-jsx"}},[t._v("rules")])]),t._v(" "),v("td",[t._v("{props: "),v("a",{attrs:{href:"/components/button/#API"}},[t._v("ButtonProps")]),t._v(", on: {}}")]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("cancelButtonProps")]),t._v(" "),v("td",[t._v("The cancel button props, follow jsx "),v("a",{attrs:{href:"https://github.com/vuejs/babel-plugin-transform-vue-jsx#difference-from-react-jsx"}},[t._v("rules")])]),t._v(" "),v("td",[t._v("{props: "),v("a",{attrs:{href:"/components/button/#API"}},[t._v("ButtonProps")]),t._v(", on: {}}")]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("title")]),t._v(" "),v("td",[t._v("The modal dialog's title")]),t._v(" "),v("td",[t._v("string|slot")]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("visible")]),t._v(" "),v("td",[t._v("Whether the modal dialog is visible or not")]),t._v(" "),v("td",[t._v("boolean")]),t._v(" "),v("td",[t._v("false")])]),t._v(" "),v("tr",[v("td",[t._v("width")]),t._v(" "),v("td",[t._v("Width of the modal dialog")]),t._v(" "),v("td",[t._v("string|number")]),t._v(" "),v("td",[t._v("520")])]),t._v(" "),v("tr",[v("td",[t._v("wrapClassName")]),t._v(" "),v("td",[t._v("The class name of the container of the modal dialog")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("zIndex")]),t._v(" "),v("td",[t._v("The "),v("code",{pre:!0},[t._v("z-index")]),t._v(" of the Modal")]),t._v(" "),v("td",[t._v("Number")]),t._v(" "),v("td",[t._v("1000")])])])]),t._v(" "),v("h3",[t._v("events")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Events Name")]),t._v(" "),v("th",[t._v("Description")]),t._v(" "),v("th",[t._v("Arguments")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("cancel")]),t._v(" "),v("td",[t._v("Specify a function that will be called when a user clicks mask, close button on top right or Cancel button")]),t._v(" "),v("td",[t._v("function(e)")])]),t._v(" "),v("tr",[v("td",[t._v("ok")]),t._v(" "),v("td",[t._v("Specify a function that will be called when a user clicks the OK button")]),t._v(" "),v("td",[t._v("function(e)")])])])]),t._v(" "),v("h4",[t._v("Note")]),t._v(" "),v("blockquote",[v("p",[t._v("The state of Modal will be preserved at it's component lifecycle by default, if you wish to open it with a brand new state everytime, set "),v("code",{pre:!0},[t._v("destroyOnClose")]),t._v(" on it.")])]),t._v(" "),v("h3",[t._v("Modal.method()")]),t._v(" "),v("p",[t._v("There are five ways to display the information based on the content's nature:")]),t._v(" "),v("ul",[v("li",[v("code",{pre:!0},[t._v("Modal.info")])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("Modal.success")])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("Modal.error")])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("Modal.warning")])]),t._v(" "),v("li",[v("code",{pre:!0},[t._v("Modal.confirm")])])]),t._v(" "),v("p",[t._v("The items listed above are all functions, expecting a settings object as parameter. The properties of the object are follows:")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Property")]),t._v(" "),v("th",[t._v("Description")]),t._v(" "),v("th",[t._v("Type")]),t._v(" "),v("th",[t._v("Default")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("autoFocusButton")]),t._v(" "),v("td",[t._v("Specify which button to autofocus")]),t._v(" "),v("td",[t._v("null|string: "),v("code",{pre:!0},[t._v("ok")]),t._v(" "),v("code",{pre:!0},[t._v("cancel")])]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("ok")])])]),t._v(" "),v("tr",[v("td",[t._v("cancelText")]),t._v(" "),v("td",[t._v("Text of the Cancel button")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("Cancel")])])]),t._v(" "),v("tr",[v("td",[t._v("centered")]),t._v(" "),v("td",[t._v("Centered Modal")]),t._v(" "),v("td",[t._v("Boolean")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("false")])])]),t._v(" "),v("tr",[v("td",[t._v("closable")]),t._v(" "),v("td",[t._v("Whether a close (x) button is visible on top right of the modal dialog or not")]),t._v(" "),v("td",[t._v("boolean")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("false")])])]),t._v(" "),v("tr",[v("td",[t._v("class")]),t._v(" "),v("td",[t._v("class of container")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("content")]),t._v(" "),v("td",[t._v("Content")]),t._v(" "),v("td",[t._v("string|vNode |function(h)")]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("icon")]),t._v(" "),v("td",[t._v("custom icon ("),v("code",{pre:!0},[t._v("Added in 1.14.0")]),t._v(")")]),t._v(" "),v("td",[t._v("string|()=>VNode")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v('<Icon type="question-circle">')])])]),t._v(" "),v("tr",[v("td",[t._v("iconType")]),t._v(" "),v("td",[t._v("Icon "),v("code",{pre:!0},[t._v("type")]),t._v(" of the Icon component (deperated after "),v("code",{pre:!0},[t._v("1.14.0")]),t._v(")")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("question-circle")])])]),t._v(" "),v("tr",[v("td",[t._v("keyboard")]),t._v(" "),v("td",[t._v("Whether support press esc to close")]),t._v(" "),v("td",[t._v("Boolean")]),t._v(" "),v("td",[t._v("true")])]),t._v(" "),v("tr",[v("td",[t._v("mask")]),t._v(" "),v("td",[t._v("Whether show mask or not.")]),t._v(" "),v("td",[t._v("Boolean")]),t._v(" "),v("td",[t._v("true")])]),t._v(" "),v("tr",[v("td",[t._v("maskClosable")]),t._v(" "),v("td",[t._v("Whether to close the modal dialog when the mask (area outside the modal) is clicked")]),t._v(" "),v("td",[t._v("Boolean")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("false")])])]),t._v(" "),v("tr",[v("td",[t._v("okText")]),t._v(" "),v("td",[t._v("Text of the OK button")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("OK")])])]),t._v(" "),v("tr",[v("td",[t._v("okType")]),t._v(" "),v("td",[t._v("Button "),v("code",{pre:!0},[t._v("type")]),t._v(" of the OK button")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",[v("code",{pre:!0},[t._v("primary")])])]),t._v(" "),v("tr",[v("td",[t._v("okButtonProps")]),t._v(" "),v("td",[t._v("The ok button props")]),t._v(" "),v("td",[v("a",{attrs:{href:"/components/button"}},[t._v("ButtonProps")])]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("cancelButtonProps")]),t._v(" "),v("td",[t._v("The cancel button props")]),t._v(" "),v("td",[v("a",{attrs:{href:"/components/button"}},[t._v("ButtonProps")])]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("title")]),t._v(" "),v("td",[t._v("Title")]),t._v(" "),v("td",[t._v("string|vNode |function(h)")]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("width")]),t._v(" "),v("td",[t._v("Width of the modal dialog")]),t._v(" "),v("td",[t._v("string|number")]),t._v(" "),v("td",[t._v("416")])]),t._v(" "),v("tr",[v("td",[t._v("zIndex")]),t._v(" "),v("td",[t._v("The "),v("code",{pre:!0},[t._v("z-index")]),t._v(" of the Modal")]),t._v(" "),v("td",[t._v("Number")]),t._v(" "),v("td",[t._v("1000")])]),t._v(" "),v("tr",[v("td",[t._v("onCancel")]),t._v(" "),v("td",[t._v("Specify a function that will be called when the user clicks the Cancel button. The parameter of this function is a function whose execution should include closing the dialog. You can also just return a promise and when the promise is resolved, the modal dialog will also be closed")]),t._v(" "),v("td",[t._v("function")]),t._v(" "),v("td",[t._v("-")])]),t._v(" "),v("tr",[v("td",[t._v("onOk")]),t._v(" "),v("td",[t._v("Specify a function that will be called when the user clicks the OK button. The parameter of this function is a function whose execution should include closing the dialog. You can also just return a promise and when the promise is resolved, the modal dialog will also be closed")]),t._v(" "),v("td",[t._v("function")]),t._v(" "),v("td",[t._v("-")])])])]),t._v(" "),v("p",[t._v("All the "),v("code",{pre:!0},[t._v("Modal.method")]),t._v("s will return a reference, and then we can update and close the modal dialog by the reference.")]),t._v(" "),v("pre",{pre:!0},[v("code",{pre:!0,attrs:{"v-pre":"",class:"language-jsx"}},[v("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("const")]),t._v(" modal = Modal.info();\n\nmodal.update({\n  "),v("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("title")]),t._v(": "),v("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v("'Updated title'")]),t._v(",\n  "),v("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("content")]),t._v(": "),v("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v("'Updated content'")]),t._v(",\n});\n\nmodal.destroy();\n")])]),t._v(" "),v("ul",[v("li",[v("code",{pre:!0},[t._v("Modal.destroyAll")])])]),t._v(" "),v("p",[v("code",{pre:!0},[t._v("Modal.destroyAll()")]),t._v(" could destroy all confirmation modal dialogs(Modal.info/Modal.success/Modal.error/Modal.warning/Modal.confirm). Usually, you can use it in router change event to destroy confirm modal dialog automatically without use modal reference to close( it's too complex to use for all modal dialogs)")]),t._v(" "),v("pre",{pre:!0},[v("code",{pre:!0,attrs:{"v-pre":"",class:"language-jsx"}},[v("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("const")]),t._v(" router = "),v("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("new")]),t._v(" VueRouter({ ... })\n\n"),v("span",{pre:!0,attrs:{class:"hljs-comment"}},[t._v("// router change")]),t._v("\nrouter.beforeEach("),v("span",{pre:!0,attrs:{class:"hljs-function"}},[t._v("("),v("span",{pre:!0,attrs:{class:"hljs-params"}},[t._v("to, "),v("span",{pre:!0,attrs:{class:"hljs-keyword"}},[t._v("from")]),t._v(", next")]),t._v(") =>")]),t._v(" {\n  Modal.destroyAll();\n})\n")])])])}],!1,null,null,null);e.default=_.exports}}]);